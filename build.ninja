builddir = .builddir
ninja_required_version = 1.11

# Rules + Installation
rule npmci
  command = cmd /c npm ci --prefix $cwd --silent
  description = npm ci ($cwd)
build node_modules/.package-lock.json: npmci package.json
  cwd = .
rule npmlink
  command = cmd /c npm install --prefix $cwd --silent --no-save $pkgs && type NUL > $out
  description = npm link $pkgs ($cwd)
rule tsc
  command = cmd /c node node_modules/@ninjutsu-build/tsc/dist/runTSC.mjs --cwd $cwd --out $out --depfile $out.depfile --listFiles $args -- $in
  description = Compiling $in
  depfile = $out.depfile
  deps = gcc
rule test
  command = cmd /c node.exe --require "@ninjutsu-build/node/lib/hookRequire.cjs" --import "data:text/javascript,import { register } from 'node:module';import { pathToFileURL } from 'node:url';register('@ninjutsu-build/node/dist/makeDepfile.js', pathToFileURL('./'), { data: '$out' });" --test --test-reporter=@ninjutsu-build/node/lib/testReporter.mjs --test-reporter=tap --test-reporter-destination=stderr --test-reporter-destination=$out $in
  description = Running test $in
  depfile = $out.depfile
  deps = gcc
rule tar
  command = tar -czf $out $args $files
  description = Creating archive $out
rule prettier
  command = cmd /c npm exec --offline --prefix $cwd prettier -- $in --write --log-level silent && type NUL > $out
  description = Formatting $in
rule format
  command = cmd /c node_modules\@biomejs\cli-win32-x64\biome.exe format $args --config-path $configPath --write $in > $out
  description = Formatting $in
rule lint
  command = cmd /c node_modules\@biomejs\cli-win32-x64\biome.exe lint $args --config-path $configPath $in > $out
  description = Formatting $in
rule copy
  command = cp $in $out
  description = Copying $in to $out
build $builddir/.ninjutsu-build/biome/format/configure.mjs: format configure.mjs | ./biome.json || node_modules/.package-lock.json
  cwd = .
  configPath = .
  args = 

# packages/core
build $builddir/.ninjutsu-build/prettier/packages/core/package.json: prettier packages/core/package.json || node_modules/.package-lock.json
  cwd = packages/core
build packages/core/node_modules/.package-lock.json: npmci packages/core/package.json || $builddir/.ninjutsu-build/prettier/packages/core/package.json
  cwd = packages/core
build $builddir/.ninjutsu-build/biome/lint/packages/core/src/core.ts: lint packages/core/src/core.ts | ./biome.json || $builddir/.ninjutsu-build/biome/format/packages/core/src/core.ts node_modules/.package-lock.json
  configPath = .
  cwd = packages/core
  args = 
build $builddir/.ninjutsu-build/biome/format/packages/core/src/core.ts: format packages/core/src/core.ts | ./biome.json || packages/core/node_modules/.package-lock.json node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/biome/lint/packages/core/src/core.ts
  cwd = packages/core
  configPath = .
  args = 
build packages/core/dist/core.js | packages/core/dist/core.d.ts: tsc packages/core/src/core.ts | packages/core/node_modules/.package-lock.json || $builddir/.ninjutsu-build/biome/format/packages/core/src/core.ts node_modules/.package-lock.json
  cwd = packages/core
  args = --target ES2018 --lib ES2021 --outDir dist --module NodeNext --moduleResolution NodeNext --declaration --esModuleInterop --forceConsistentCasingInFileNames --strict --noImplicitAny --strictNullChecks --strictFunctionTypes --strictBindCallApply --strictPropertyInitialization --noImplicitThis --useUnknownInCatchVariables --alwaysStrict --noUnusedLocals --noUnusedParameters --noImplicitReturns --noFallthroughCasesInSwitch --skipDefaultLibCheck --skipLibCheck
build $builddir/core/README.md: copy packages/core/README.md
build $builddir/core/package.json: copy packages/core/package.json || $builddir/.ninjutsu-build/prettier/packages/core/package.json
build $builddir/core/dist/core.js: copy packages/core/dist/core.js
build $builddir/core/dist/core.d.ts: copy packages/core/dist/core.d.ts
build $builddir/ninjutsu-build-core.tgz: tar $builddir/core/README.md $builddir/core/package.json $builddir/core/dist/core.js $builddir/core/dist/core.d.ts
  files = core/README.md core/package.json core/dist/core.js core/dist/core.d.ts
  args = -C $builddir

# packages/biome
build $builddir/.ninjutsu-build/prettier/packages/biome/package.json: prettier packages/biome/package.json || node_modules/.package-lock.json
  cwd = packages/biome
build packages/biome/node_modules/.package-lock.json: npmci packages/biome/package.json || $builddir/.ninjutsu-build/prettier/packages/biome/package.json
  cwd = packages/biome
build $builddir/.ninjutsu-build/npmlink/packages/biome/package.json: npmlink packages/biome/package.json | $builddir/ninjutsu-build-core.tgz || packages/biome/node_modules/.package-lock.json $builddir/.ninjutsu-build/prettier/packages/biome/package.json
  pkgs = $builddir/ninjutsu-build-core.tgz
  cwd = packages/biome
build $builddir/.ninjutsu-build/biome/lint/packages/biome/src/biome.ts: lint packages/biome/src/biome.ts | ./biome.json || $builddir/.ninjutsu-build/biome/format/packages/biome/src/biome.ts node_modules/.package-lock.json
  configPath = .
  cwd = packages/biome
  args = 
build $builddir/.ninjutsu-build/biome/format/packages/biome/src/biome.ts: format packages/biome/src/biome.ts | ./biome.json || packages/biome/node_modules/.package-lock.json node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/biome/lint/packages/biome/src/biome.ts
  cwd = packages/biome
  configPath = .
  args = 
build packages/biome/dist/biome.js | packages/biome/dist/biome.d.ts: tsc packages/biome/src/biome.ts | $builddir/.ninjutsu-build/npmlink/packages/biome/package.json || $builddir/.ninjutsu-build/biome/format/packages/biome/src/biome.ts node_modules/.package-lock.json
  cwd = packages/biome
  args = --target ES2018 --lib ES2021 --outDir dist --module NodeNext --moduleResolution NodeNext --declaration --esModuleInterop --forceConsistentCasingInFileNames --strict --noImplicitAny --strictNullChecks --strictFunctionTypes --strictBindCallApply --strictPropertyInitialization --noImplicitThis --useUnknownInCatchVariables --alwaysStrict --noUnusedLocals --noUnusedParameters --noImplicitReturns --noFallthroughCasesInSwitch --skipDefaultLibCheck --skipLibCheck
build $builddir/biome/README.md: copy packages/biome/README.md
build $builddir/biome/package.json: copy packages/biome/package.json || $builddir/.ninjutsu-build/prettier/packages/biome/package.json
build $builddir/biome/dist/biome.js: copy packages/biome/dist/biome.js
build $builddir/biome/dist/biome.d.ts: copy packages/biome/dist/biome.d.ts
build $builddir/ninjutsu-build-biome.tgz: tar $builddir/biome/README.md $builddir/biome/package.json $builddir/biome/dist/biome.js $builddir/biome/dist/biome.d.ts
  files = biome/README.md biome/package.json biome/dist/biome.js biome/dist/biome.d.ts
  args = -C $builddir

# packages/node
build $builddir/.ninjutsu-build/prettier/packages/node/package.json: prettier packages/node/package.json || node_modules/.package-lock.json
  cwd = packages/node
build packages/node/node_modules/.package-lock.json: npmci packages/node/package.json || $builddir/.ninjutsu-build/prettier/packages/node/package.json
  cwd = packages/node
build $builddir/.ninjutsu-build/npmlink/packages/node/package.json: npmlink packages/node/package.json | $builddir/ninjutsu-build-core.tgz || packages/node/node_modules/.package-lock.json $builddir/.ninjutsu-build/prettier/packages/node/package.json
  pkgs = $builddir/ninjutsu-build-core.tgz
  cwd = packages/node
build $builddir/.ninjutsu-build/biome/lint/packages/node/src/node.ts: lint packages/node/src/node.ts | ./biome.json || $builddir/.ninjutsu-build/biome/format/packages/node/src/node.ts node_modules/.package-lock.json
  configPath = .
  cwd = packages/node
  args = 
build $builddir/.ninjutsu-build/biome/format/packages/node/src/node.ts: format packages/node/src/node.ts | ./biome.json || packages/node/node_modules/.package-lock.json node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/biome/lint/packages/node/src/node.ts
  cwd = packages/node
  configPath = .
  args = 
build $builddir/.ninjutsu-build/biome/lint/packages/node/src/makeDepfile.ts: lint packages/node/src/makeDepfile.ts | ./biome.json || $builddir/.ninjutsu-build/biome/format/packages/node/src/makeDepfile.ts node_modules/.package-lock.json
  configPath = .
  cwd = packages/node
  args = 
build $builddir/.ninjutsu-build/biome/format/packages/node/src/makeDepfile.ts: format packages/node/src/makeDepfile.ts | ./biome.json || packages/node/node_modules/.package-lock.json node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/biome/lint/packages/node/src/makeDepfile.ts
  cwd = packages/node
  configPath = .
  args = 
build $builddir/.ninjutsu-build/biome/lint/packages/node/lib/testReporter.mjs: lint packages/node/lib/testReporter.mjs | ./biome.json || $builddir/.ninjutsu-build/biome/format/packages/node/lib/testReporter.mjs node_modules/.package-lock.json
  configPath = .
  cwd = packages/node
  args = 
build $builddir/.ninjutsu-build/biome/format/packages/node/lib/testReporter.mjs: format packages/node/lib/testReporter.mjs | ./biome.json || packages/node/node_modules/.package-lock.json node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/biome/lint/packages/node/lib/testReporter.mjs
  cwd = packages/node
  configPath = .
  args = 
build $builddir/.ninjutsu-build/biome/lint/packages/node/lib/hookRequire.cjs: lint packages/node/lib/hookRequire.cjs | ./biome.json || $builddir/.ninjutsu-build/biome/format/packages/node/lib/hookRequire.cjs node_modules/.package-lock.json
  configPath = .
  cwd = packages/node
  args = 
build $builddir/.ninjutsu-build/biome/format/packages/node/lib/hookRequire.cjs: format packages/node/lib/hookRequire.cjs | ./biome.json || packages/node/node_modules/.package-lock.json node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/biome/lint/packages/node/lib/hookRequire.cjs
  cwd = packages/node
  configPath = .
  args = 
build $builddir/.ninjutsu-build/biome/lint/packages/node/lib/file.d.cts: lint packages/node/lib/file.d.cts | ./biome.json || $builddir/.ninjutsu-build/biome/format/packages/node/lib/file.d.cts node_modules/.package-lock.json
  configPath = .
  cwd = packages/node
  args = 
build $builddir/.ninjutsu-build/biome/format/packages/node/lib/file.d.cts: format packages/node/lib/file.d.cts | ./biome.json || packages/node/node_modules/.package-lock.json node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/biome/lint/packages/node/lib/file.d.cts
  cwd = packages/node
  configPath = .
  args = 
build $builddir/.ninjutsu-build/biome/lint/packages/node/lib/file.cjs: lint packages/node/lib/file.cjs | ./biome.json || $builddir/.ninjutsu-build/biome/format/packages/node/lib/file.cjs node_modules/.package-lock.json
  configPath = .
  cwd = packages/node
  args = 
build $builddir/.ninjutsu-build/biome/format/packages/node/lib/file.cjs: format packages/node/lib/file.cjs | ./biome.json || packages/node/node_modules/.package-lock.json node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/biome/lint/packages/node/lib/file.cjs
  cwd = packages/node
  configPath = .
  args = 
build packages/node/dist/node.js | packages/node/dist/node.d.ts packages/node/dist/makeDepfile.js packages/node/dist/makeDepfile.d.ts: tsc packages/node/src/node.ts packages/node/src/makeDepfile.ts | $builddir/.ninjutsu-build/npmlink/packages/node/package.json || $builddir/.ninjutsu-build/biome/format/packages/node/src/node.ts $builddir/.ninjutsu-build/biome/format/packages/node/src/makeDepfile.ts node_modules/.package-lock.json
  cwd = packages/node
  args = --target ES2018 --lib ES2021 --outDir dist --module NodeNext --moduleResolution NodeNext --declaration --esModuleInterop --forceConsistentCasingInFileNames --strict --noImplicitAny --strictNullChecks --strictFunctionTypes --strictBindCallApply --strictPropertyInitialization --noImplicitThis --useUnknownInCatchVariables --alwaysStrict --noUnusedLocals --noUnusedParameters --noImplicitReturns --noFallthroughCasesInSwitch --skipDefaultLibCheck --skipLibCheck
build $builddir/node/README.md: copy packages/node/README.md
build $builddir/node/package.json: copy packages/node/package.json || $builddir/.ninjutsu-build/prettier/packages/node/package.json
build $builddir/node/dist/node.js: copy packages/node/dist/node.js
build $builddir/node/dist/node.d.ts: copy packages/node/dist/node.d.ts
build $builddir/node/dist/makeDepfile.js: copy packages/node/dist/makeDepfile.js
build $builddir/node/dist/makeDepfile.d.ts: copy packages/node/dist/makeDepfile.d.ts
build $builddir/node/lib/testReporter.mjs: copy packages/node/lib/testReporter.mjs || $builddir/.ninjutsu-build/biome/format/packages/node/lib/testReporter.mjs
build $builddir/node/lib/hookRequire.cjs: copy packages/node/lib/hookRequire.cjs || $builddir/.ninjutsu-build/biome/format/packages/node/lib/hookRequire.cjs
build $builddir/node/lib/file.d.cts: copy packages/node/lib/file.d.cts || $builddir/.ninjutsu-build/biome/format/packages/node/lib/file.d.cts
build $builddir/node/lib/file.cjs: copy packages/node/lib/file.cjs || $builddir/.ninjutsu-build/biome/format/packages/node/lib/file.cjs
build $builddir/ninjutsu-build-node.tgz: tar $builddir/node/README.md $builddir/node/package.json $builddir/node/dist/node.js $builddir/node/dist/node.d.ts $builddir/node/dist/makeDepfile.js $builddir/node/dist/makeDepfile.d.ts $builddir/node/lib/testReporter.mjs $builddir/node/lib/hookRequire.cjs $builddir/node/lib/file.d.cts $builddir/node/lib/file.cjs
  files = node/README.md node/package.json node/dist/node.js node/dist/node.d.ts node/dist/makeDepfile.js node/dist/makeDepfile.d.ts node/lib/testReporter.mjs node/lib/hookRequire.cjs node/lib/file.d.cts node/lib/file.cjs
  args = -C $builddir

# packages/tsc
build $builddir/.ninjutsu-build/prettier/packages/tsc/package.json: prettier packages/tsc/package.json || node_modules/.package-lock.json
  cwd = packages/tsc
build packages/tsc/node_modules/.package-lock.json: npmci packages/tsc/package.json || $builddir/.ninjutsu-build/prettier/packages/tsc/package.json
  cwd = packages/tsc
build $builddir/.ninjutsu-build/npmlink/packages/tsc/package.json: npmlink packages/tsc/package.json | $builddir/ninjutsu-build-core.tgz || packages/tsc/node_modules/.package-lock.json $builddir/.ninjutsu-build/prettier/packages/tsc/package.json
  pkgs = $builddir/ninjutsu-build-core.tgz
  cwd = packages/tsc
build $builddir/.ninjutsu-build/biome/lint/packages/tsc/src/tsc.ts: lint packages/tsc/src/tsc.ts | ./biome.json || $builddir/.ninjutsu-build/biome/format/packages/tsc/src/tsc.ts node_modules/.package-lock.json
  configPath = .
  cwd = packages/tsc
  args = 
build $builddir/.ninjutsu-build/biome/format/packages/tsc/src/tsc.ts: format packages/tsc/src/tsc.ts | ./biome.json || packages/tsc/node_modules/.package-lock.json node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/biome/lint/packages/tsc/src/tsc.ts
  cwd = packages/tsc
  configPath = .
  args = 
build $builddir/.ninjutsu-build/biome/lint/packages/tsc/src/runTSC.mts: lint packages/tsc/src/runTSC.mts | ./biome.json || $builddir/.ninjutsu-build/biome/format/packages/tsc/src/runTSC.mts node_modules/.package-lock.json
  configPath = .
  cwd = packages/tsc
  args = 
build $builddir/.ninjutsu-build/biome/format/packages/tsc/src/runTSC.mts: format packages/tsc/src/runTSC.mts | ./biome.json || packages/tsc/node_modules/.package-lock.json node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/biome/lint/packages/tsc/src/runTSC.mts
  cwd = packages/tsc
  configPath = .
  args = 
build packages/tsc/dist/tsc.js | packages/tsc/dist/tsc.d.ts packages/tsc/dist/runTSC.mjs packages/tsc/dist/runTSC.d.mts: tsc packages/tsc/src/tsc.ts packages/tsc/src/runTSC.mts | $builddir/.ninjutsu-build/npmlink/packages/tsc/package.json || $builddir/.ninjutsu-build/biome/format/packages/tsc/src/tsc.ts $builddir/.ninjutsu-build/biome/format/packages/tsc/src/runTSC.mts node_modules/.package-lock.json
  cwd = packages/tsc
  args = --target ES2018 --lib ES2021 --outDir dist --module NodeNext --moduleResolution NodeNext --declaration --esModuleInterop --forceConsistentCasingInFileNames --strict --noImplicitAny --strictNullChecks --strictFunctionTypes --strictBindCallApply --strictPropertyInitialization --noImplicitThis --useUnknownInCatchVariables --alwaysStrict --noUnusedLocals --noUnusedParameters --noImplicitReturns --noFallthroughCasesInSwitch --skipDefaultLibCheck --skipLibCheck
build $builddir/tsc/README.md: copy packages/tsc/README.md
build $builddir/tsc/package.json: copy packages/tsc/package.json || $builddir/.ninjutsu-build/prettier/packages/tsc/package.json
build $builddir/tsc/dist/tsc.js: copy packages/tsc/dist/tsc.js
build $builddir/tsc/dist/tsc.d.ts: copy packages/tsc/dist/tsc.d.ts
build $builddir/tsc/dist/runTSC.mjs: copy packages/tsc/dist/runTSC.mjs
build $builddir/tsc/dist/runTSC.d.mts: copy packages/tsc/dist/runTSC.d.mts
build $builddir/ninjutsu-build-tsc.tgz: tar $builddir/tsc/README.md $builddir/tsc/package.json $builddir/tsc/dist/tsc.js $builddir/tsc/dist/tsc.d.ts $builddir/tsc/dist/runTSC.mjs $builddir/tsc/dist/runTSC.d.mts
  files = tsc/README.md tsc/package.json tsc/dist/tsc.js tsc/dist/tsc.d.ts tsc/dist/runTSC.mjs tsc/dist/runTSC.d.mts
  args = -C $builddir

# Tests
build $builddir/.ninjutsu-build/prettier/tests/package.json: prettier tests/package.json || node_modules/.package-lock.json
  cwd = tests
build tests/node_modules/.package-lock.json: npmci tests/package.json || $builddir/.ninjutsu-build/prettier/tests/package.json
  cwd = tests
build $builddir/.ninjutsu-build/npmlink/tests/package.json: npmlink tests/package.json | $builddir/ninjutsu-build-core.tgz $builddir/ninjutsu-build-biome.tgz $builddir/ninjutsu-build-node.tgz $builddir/ninjutsu-build-tsc.tgz || tests/node_modules/.package-lock.json $builddir/.ninjutsu-build/prettier/tests/package.json
  pkgs = $builddir/ninjutsu-build-core.tgz $builddir/ninjutsu-build-biome.tgz $builddir/ninjutsu-build-node.tgz $builddir/ninjutsu-build-tsc.tgz
  cwd = tests
build $builddir/.ninjutsu-build/biome/lint/tests/src/tsc.test.ts: lint tests/src/tsc.test.ts | ./biome.json || $builddir/.ninjutsu-build/biome/format/tests/src/tsc.test.ts node_modules/.package-lock.json
  configPath = .
  cwd = tests
  args = 
build $builddir/.ninjutsu-build/biome/format/tests/src/tsc.test.ts: format tests/src/tsc.test.ts | ./biome.json || tests/node_modules/.package-lock.json node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/biome/lint/tests/src/tsc.test.ts
  cwd = tests
  configPath = .
  args = 
build $builddir/.ninjutsu-build/biome/lint/tests/src/node.test.ts: lint tests/src/node.test.ts | ./biome.json || $builddir/.ninjutsu-build/biome/format/tests/src/node.test.ts node_modules/.package-lock.json
  configPath = .
  cwd = tests
  args = 
build $builddir/.ninjutsu-build/biome/format/tests/src/node.test.ts: format tests/src/node.test.ts | ./biome.json || tests/node_modules/.package-lock.json node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/biome/lint/tests/src/node.test.ts
  cwd = tests
  configPath = .
  args = 
build $builddir/.ninjutsu-build/biome/lint/tests/src/core.test.ts: lint tests/src/core.test.ts | ./biome.json || $builddir/.ninjutsu-build/biome/format/tests/src/core.test.ts node_modules/.package-lock.json
  configPath = .
  cwd = tests
  args = 
build $builddir/.ninjutsu-build/biome/format/tests/src/core.test.ts: format tests/src/core.test.ts | ./biome.json || tests/node_modules/.package-lock.json node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/biome/lint/tests/src/core.test.ts
  cwd = tests
  configPath = .
  args = 
build $builddir/.ninjutsu-build/biome/lint/tests/src/biome.test.ts: lint tests/src/biome.test.ts | ./biome.json || $builddir/.ninjutsu-build/biome/format/tests/src/biome.test.ts node_modules/.package-lock.json
  configPath = .
  cwd = tests
  args = 
build $builddir/.ninjutsu-build/biome/format/tests/src/biome.test.ts: format tests/src/biome.test.ts | ./biome.json || tests/node_modules/.package-lock.json node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/biome/lint/tests/src/biome.test.ts
  cwd = tests
  configPath = .
  args = 
pool compiletests
  depth = 1
build tests/dist/tsc.test.js: tsc tests/src/tsc.test.ts | $builddir/.ninjutsu-build/npmlink/tests/package.json || $builddir/.ninjutsu-build/biome/format/tests/src/tsc.test.ts node_modules/.package-lock.json
  pool = compiletests
  cwd = tests
  args = --target ES2018 --lib ES2021 --outDir dist --module NodeNext --moduleResolution NodeNext --esModuleInterop --forceConsistentCasingInFileNames --strict --noImplicitAny --strictNullChecks --strictFunctionTypes --strictBindCallApply --strictPropertyInitialization --noImplicitThis --useUnknownInCatchVariables --alwaysStrict --noUnusedLocals --noUnusedParameters --noImplicitReturns --noFallthroughCasesInSwitch --skipDefaultLibCheck --skipLibCheck
build tests/dist/tsc.test.js.result.txt: test tests/dist/tsc.test.js
  args = 
build tests/dist/node.test.js: tsc tests/src/node.test.ts | $builddir/.ninjutsu-build/npmlink/tests/package.json || $builddir/.ninjutsu-build/biome/format/tests/src/node.test.ts node_modules/.package-lock.json
  pool = compiletests
  cwd = tests
  args = --target ES2018 --lib ES2021 --outDir dist --module NodeNext --moduleResolution NodeNext --esModuleInterop --forceConsistentCasingInFileNames --strict --noImplicitAny --strictNullChecks --strictFunctionTypes --strictBindCallApply --strictPropertyInitialization --noImplicitThis --useUnknownInCatchVariables --alwaysStrict --noUnusedLocals --noUnusedParameters --noImplicitReturns --noFallthroughCasesInSwitch --skipDefaultLibCheck --skipLibCheck
build tests/dist/node.test.js.result.txt: test tests/dist/node.test.js
  args = 
build tests/dist/core.test.js: tsc tests/src/core.test.ts | $builddir/.ninjutsu-build/npmlink/tests/package.json || $builddir/.ninjutsu-build/biome/format/tests/src/core.test.ts node_modules/.package-lock.json
  pool = compiletests
  cwd = tests
  args = --target ES2018 --lib ES2021 --outDir dist --module NodeNext --moduleResolution NodeNext --esModuleInterop --forceConsistentCasingInFileNames --strict --noImplicitAny --strictNullChecks --strictFunctionTypes --strictBindCallApply --strictPropertyInitialization --noImplicitThis --useUnknownInCatchVariables --alwaysStrict --noUnusedLocals --noUnusedParameters --noImplicitReturns --noFallthroughCasesInSwitch --skipDefaultLibCheck --skipLibCheck
build tests/dist/core.test.js.result.txt: test tests/dist/core.test.js
  args = 
build tests/dist/biome.test.js: tsc tests/src/biome.test.ts | $builddir/.ninjutsu-build/npmlink/tests/package.json || $builddir/.ninjutsu-build/biome/format/tests/src/biome.test.ts node_modules/.package-lock.json
  pool = compiletests
  cwd = tests
  args = --target ES2018 --lib ES2021 --outDir dist --module NodeNext --moduleResolution NodeNext --esModuleInterop --forceConsistentCasingInFileNames --strict --noImplicitAny --strictNullChecks --strictFunctionTypes --strictBindCallApply --strictPropertyInitialization --noImplicitThis --useUnknownInCatchVariables --alwaysStrict --noUnusedLocals --noUnusedParameters --noImplicitReturns --noFallthroughCasesInSwitch --skipDefaultLibCheck --skipLibCheck
build tests/dist/biome.test.js.result.txt: test tests/dist/biome.test.js
  args = 
