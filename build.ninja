builddir = .builddir
ninja_required_version = 1.11

# Rules
rule tsc
  command = cmd /c node node_modules/@ninjutsu-build/tsc/dist/runTSC.mjs --cwd $cwd --out $out --depfile $out.depfile --listFiles $args -- $in
  description = Compiling $in
  depfile = $out.depfile
  deps = gcc
rule node
  command = cmd /c node.exe --require "@ninjutsu-build/node/lib/hookRequire.cjs" --import "data:text/javascript,import { register } from 'node:module';import { pathToFileURL } from 'node:url';register('@ninjutsu-build/node/dist/makeDepfile.js', pathToFileURL('./'), { data: '$out' });" $in $args > $out
  description = Creating $out from 'node $in'
  depfile = $out.depfile
  deps = gcc
rule npmci
  command = cmd /c npm ci --prefix $cwd --silent
  description = npm ci ($cwd)
rule npmlink
  command = cmd /c npm install --prefix $cwd --silent --no-save $pkgs && type NUL > $out
  description = npm link $pkgs ($cwd)
rule tar
  command = tar -czf $out $args $files
  description = Creating archive $out
rule prettier
  command = cmd /c npm exec --offline --prefix $cwd prettier -- $in --write --log-level silent && type NUL > $out
  description = Formatting $in
rule eslint
  command = cmd /c npm exec --offline --prefix $cwd eslint -- $in > $out
  description = Linting $in
rule copy
  command = cp $in $out
  description = Copying $in to $out

# Configuration
build $builddir/.ninjutsu-build/prettier/package.json: prettier package.json
  cwd = .
build $builddir/.ninjutsu-build/prettier/configure.mjs: prettier configure.mjs
  cwd = .
build node_modules/.package-lock.json: npmci package.json || $builddir/.ninjutsu-build/prettier/package.json
  cwd = .

# packages/core
build $builddir/.ninjutsu-build/prettier/packages/core/package.json: prettier packages/core/package.json
  cwd = packages/core
build packages/core/node_modules/.package-lock.json: npmci packages/core/package.json || $builddir/.ninjutsu-build/prettier/packages/core/package.json
  cwd = packages/core
build $builddir/.ninjutsu-build/npmlink/packages/core/package.json: npmlink packages/core/package.json |  || packages/core/node_modules/.package-lock.json $builddir/.ninjutsu-build/prettier/packages/core/package.json
  pkgs = 
  cwd = packages/core
build $builddir/.ninjutsu-build/eslint/packages/core/src/core.ts: eslint packages/core/src/core.ts || $builddir/.ninjutsu-build/prettier/packages/core/src/core.ts
  cwd = packages/core
build $builddir/.ninjutsu-build/prettier/packages/core/src/core.ts: prettier packages/core/src/core.ts || packages/core/node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/eslint/packages/core/src/core.ts
  cwd = packages/core
build packages/core/dist/core.js | packages/core/dist/core.d.ts: tsc packages/core/src/core.ts | $builddir/.ninjutsu-build/npmlink/packages/core/package.json || $builddir/.ninjutsu-build/prettier/packages/core/src/core.ts
  cwd = packages/core
  args = --target ES2018 --lib ES2021 --outDir dist --module NodeNext --moduleResolution NodeNext --declaration --esModuleInterop --forceConsistentCasingInFileNames --strict --noImplicitAny --strictNullChecks --strictFunctionTypes --strictBindCallApply --strictPropertyInitialization --noImplicitThis --useUnknownInCatchVariables --alwaysStrict --noUnusedLocals --noUnusedParameters --noImplicitReturns --noFallthroughCasesInSwitch --skipDefaultLibCheck --skipLibCheck
build $builddir/core/README.md: copy packages/core/README.md
build $builddir/core/package.json: copy packages/core/package.json || $builddir/.ninjutsu-build/prettier/packages/core/package.json
build $builddir/core/dist/core.js: copy packages/core/dist/core.js
build $builddir/core/dist/core.d.ts: copy packages/core/dist/core.d.ts
build $builddir/ninjutsu-build-core.tgz: tar $builddir/core/README.md $builddir/core/package.json $builddir/core/dist/core.js $builddir/core/dist/core.d.ts
  files = core/README.md core/package.json core/dist/core.js core/dist/core.d.ts
  args = -C $builddir

# packages/node
build $builddir/.ninjutsu-build/prettier/packages/node/package.json: prettier packages/node/package.json
  cwd = packages/node
build packages/node/node_modules/.package-lock.json: npmci packages/node/package.json || $builddir/.ninjutsu-build/prettier/packages/node/package.json
  cwd = packages/node
build $builddir/.ninjutsu-build/npmlink/packages/node/package.json: npmlink packages/node/package.json |  || packages/node/node_modules/.package-lock.json $builddir/.ninjutsu-build/prettier/packages/node/package.json
  pkgs = 
  cwd = packages/node
build $builddir/.ninjutsu-build/eslint/packages/node/src/node.ts: eslint packages/node/src/node.ts || $builddir/.ninjutsu-build/prettier/packages/node/src/node.ts
  cwd = packages/node
build $builddir/.ninjutsu-build/prettier/packages/node/src/node.ts: prettier packages/node/src/node.ts || packages/node/node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/eslint/packages/node/src/node.ts
  cwd = packages/node
build $builddir/.ninjutsu-build/eslint/packages/node/src/makeDepfile.ts: eslint packages/node/src/makeDepfile.ts || $builddir/.ninjutsu-build/prettier/packages/node/src/makeDepfile.ts
  cwd = packages/node
build $builddir/.ninjutsu-build/prettier/packages/node/src/makeDepfile.ts: prettier packages/node/src/makeDepfile.ts || packages/node/node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/eslint/packages/node/src/makeDepfile.ts
  cwd = packages/node
build $builddir/.ninjutsu-build/eslint/packages/node/lib/hookRequire.cjs: eslint packages/node/lib/hookRequire.cjs || $builddir/.ninjutsu-build/prettier/packages/node/lib/hookRequire.cjs
  cwd = packages/node
build $builddir/.ninjutsu-build/prettier/packages/node/lib/hookRequire.cjs: prettier packages/node/lib/hookRequire.cjs || packages/node/node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/eslint/packages/node/lib/hookRequire.cjs
  cwd = packages/node
build $builddir/.ninjutsu-build/eslint/packages/node/lib/file.d.cts: eslint packages/node/lib/file.d.cts || $builddir/.ninjutsu-build/prettier/packages/node/lib/file.d.cts
  cwd = packages/node
build $builddir/.ninjutsu-build/prettier/packages/node/lib/file.d.cts: prettier packages/node/lib/file.d.cts || packages/node/node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/eslint/packages/node/lib/file.d.cts
  cwd = packages/node
build $builddir/.ninjutsu-build/eslint/packages/node/lib/file.cjs: eslint packages/node/lib/file.cjs || $builddir/.ninjutsu-build/prettier/packages/node/lib/file.cjs
  cwd = packages/node
build $builddir/.ninjutsu-build/prettier/packages/node/lib/file.cjs: prettier packages/node/lib/file.cjs || packages/node/node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/eslint/packages/node/lib/file.cjs
  cwd = packages/node
build packages/node/dist/node.js | packages/node/dist/node.d.ts packages/node/dist/makeDepfile.js packages/node/dist/makeDepfile.d.ts: tsc packages/node/src/node.ts packages/node/src/makeDepfile.ts | $builddir/.ninjutsu-build/npmlink/packages/node/package.json || $builddir/.ninjutsu-build/prettier/packages/node/src/node.ts $builddir/.ninjutsu-build/prettier/packages/node/src/makeDepfile.ts
  cwd = packages/node
  args = --target ES2018 --lib ES2021 --outDir dist --module NodeNext --moduleResolution NodeNext --declaration --esModuleInterop --forceConsistentCasingInFileNames --strict --noImplicitAny --strictNullChecks --strictFunctionTypes --strictBindCallApply --strictPropertyInitialization --noImplicitThis --useUnknownInCatchVariables --alwaysStrict --noUnusedLocals --noUnusedParameters --noImplicitReturns --noFallthroughCasesInSwitch --skipDefaultLibCheck --skipLibCheck
build $builddir/node/README.md: copy packages/node/README.md
build $builddir/node/package.json: copy packages/node/package.json || $builddir/.ninjutsu-build/prettier/packages/node/package.json
build $builddir/node/dist/node.js: copy packages/node/dist/node.js
build $builddir/node/dist/node.d.ts: copy packages/node/dist/node.d.ts
build $builddir/node/dist/makeDepfile.js: copy packages/node/dist/makeDepfile.js
build $builddir/node/dist/makeDepfile.d.ts: copy packages/node/dist/makeDepfile.d.ts
build $builddir/node/lib/hookRequire.cjs: copy packages/node/lib/hookRequire.cjs || $builddir/.ninjutsu-build/prettier/packages/node/lib/hookRequire.cjs
build $builddir/node/lib/file.d.cts: copy packages/node/lib/file.d.cts || $builddir/.ninjutsu-build/prettier/packages/node/lib/file.d.cts
build $builddir/node/lib/file.cjs: copy packages/node/lib/file.cjs || $builddir/.ninjutsu-build/prettier/packages/node/lib/file.cjs
build $builddir/ninjutsu-build-node.tgz: tar $builddir/node/README.md $builddir/node/package.json $builddir/node/dist/node.js $builddir/node/dist/node.d.ts $builddir/node/dist/makeDepfile.js $builddir/node/dist/makeDepfile.d.ts $builddir/node/lib/hookRequire.cjs $builddir/node/lib/file.d.cts $builddir/node/lib/file.cjs
  files = node/README.md node/package.json node/dist/node.js node/dist/node.d.ts node/dist/makeDepfile.js node/dist/makeDepfile.d.ts node/lib/hookRequire.cjs node/lib/file.d.cts node/lib/file.cjs
  args = -C $builddir

# packages/tsc
build $builddir/.ninjutsu-build/prettier/packages/tsc/package.json: prettier packages/tsc/package.json
  cwd = packages/tsc
build packages/tsc/node_modules/.package-lock.json: npmci packages/tsc/package.json || $builddir/.ninjutsu-build/prettier/packages/tsc/package.json
  cwd = packages/tsc
build $builddir/.ninjutsu-build/npmlink/packages/tsc/package.json: npmlink packages/tsc/package.json |  || packages/tsc/node_modules/.package-lock.json $builddir/.ninjutsu-build/prettier/packages/tsc/package.json
  pkgs = 
  cwd = packages/tsc
build $builddir/.ninjutsu-build/eslint/packages/tsc/src/tsc.ts: eslint packages/tsc/src/tsc.ts || $builddir/.ninjutsu-build/prettier/packages/tsc/src/tsc.ts
  cwd = packages/tsc
build $builddir/.ninjutsu-build/prettier/packages/tsc/src/tsc.ts: prettier packages/tsc/src/tsc.ts || packages/tsc/node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/eslint/packages/tsc/src/tsc.ts
  cwd = packages/tsc
build $builddir/.ninjutsu-build/eslint/packages/tsc/src/runTSC.mts: eslint packages/tsc/src/runTSC.mts || $builddir/.ninjutsu-build/prettier/packages/tsc/src/runTSC.mts
  cwd = packages/tsc
build $builddir/.ninjutsu-build/prettier/packages/tsc/src/runTSC.mts: prettier packages/tsc/src/runTSC.mts || packages/tsc/node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/eslint/packages/tsc/src/runTSC.mts
  cwd = packages/tsc
build packages/tsc/dist/tsc.js | packages/tsc/dist/tsc.d.ts packages/tsc/dist/runTSC.mjs packages/tsc/dist/runTSC.d.mts: tsc packages/tsc/src/tsc.ts packages/tsc/src/runTSC.mts | $builddir/.ninjutsu-build/npmlink/packages/tsc/package.json || $builddir/.ninjutsu-build/prettier/packages/tsc/src/tsc.ts $builddir/.ninjutsu-build/prettier/packages/tsc/src/runTSC.mts
  cwd = packages/tsc
  args = --target ES2018 --lib ES2021 --outDir dist --module NodeNext --moduleResolution NodeNext --declaration --esModuleInterop --forceConsistentCasingInFileNames --strict --noImplicitAny --strictNullChecks --strictFunctionTypes --strictBindCallApply --strictPropertyInitialization --noImplicitThis --useUnknownInCatchVariables --alwaysStrict --noUnusedLocals --noUnusedParameters --noImplicitReturns --noFallthroughCasesInSwitch --skipDefaultLibCheck --skipLibCheck
build $builddir/tsc/README.md: copy packages/tsc/README.md
build $builddir/tsc/package.json: copy packages/tsc/package.json || $builddir/.ninjutsu-build/prettier/packages/tsc/package.json
build $builddir/tsc/dist/tsc.js: copy packages/tsc/dist/tsc.js
build $builddir/tsc/dist/tsc.d.ts: copy packages/tsc/dist/tsc.d.ts
build $builddir/tsc/dist/runTSC.mjs: copy packages/tsc/dist/runTSC.mjs
build $builddir/tsc/dist/runTSC.d.mts: copy packages/tsc/dist/runTSC.d.mts
build $builddir/ninjutsu-build-tsc.tgz: tar $builddir/tsc/README.md $builddir/tsc/package.json $builddir/tsc/dist/tsc.js $builddir/tsc/dist/tsc.d.ts $builddir/tsc/dist/runTSC.mjs $builddir/tsc/dist/runTSC.d.mts
  files = tsc/README.md tsc/package.json tsc/dist/tsc.js tsc/dist/tsc.d.ts tsc/dist/runTSC.mjs tsc/dist/runTSC.d.mts
  args = -C $builddir

# Tests
build $builddir/.ninjutsu-build/prettier/tests/package.json: prettier tests/package.json
  cwd = tests
build tests/node_modules/.package-lock.json: npmci tests/package.json || $builddir/.ninjutsu-build/prettier/tests/package.json
  cwd = tests
build $builddir/.ninjutsu-build/npmlink/tests/package.json: npmlink tests/package.json | $builddir/ninjutsu-build-tsc.tgz || tests/node_modules/.package-lock.json $builddir/.ninjutsu-build/prettier/tests/package.json
  pkgs = $builddir/ninjutsu-build-tsc.tgz
  cwd = tests
build $builddir/.ninjutsu-build/eslint/tests/src/tsc.test.ts: eslint tests/src/tsc.test.ts || $builddir/.ninjutsu-build/prettier/tests/src/tsc.test.ts
  cwd = tests
build $builddir/.ninjutsu-build/prettier/tests/src/tsc.test.ts: prettier tests/src/tsc.test.ts || tests/node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/eslint/tests/src/tsc.test.ts
  cwd = tests
build $builddir/.ninjutsu-build/eslint/tests/src/node.test.ts: eslint tests/src/node.test.ts || $builddir/.ninjutsu-build/prettier/tests/src/node.test.ts
  cwd = tests
build $builddir/.ninjutsu-build/prettier/tests/src/node.test.ts: prettier tests/src/node.test.ts || tests/node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/eslint/tests/src/node.test.ts
  cwd = tests
build $builddir/.ninjutsu-build/eslint/tests/src/core.test.ts: eslint tests/src/core.test.ts || $builddir/.ninjutsu-build/prettier/tests/src/core.test.ts
  cwd = tests
build $builddir/.ninjutsu-build/prettier/tests/src/core.test.ts: prettier tests/src/core.test.ts || tests/node_modules/.package-lock.json |@ $builddir/.ninjutsu-build/eslint/tests/src/core.test.ts
  cwd = tests
pool compiletests
  depth = 1
build tests/dist/tsc.test.js: tsc tests/src/tsc.test.ts | $builddir/.ninjutsu-build/npmlink/tests/package.json || $builddir/.ninjutsu-build/prettier/tests/src/tsc.test.ts
  pool = compiletests
  cwd = tests
  args = --target ES2018 --lib ES2021 --outDir dist --module NodeNext --moduleResolution NodeNext --esModuleInterop --forceConsistentCasingInFileNames --strict --noImplicitAny --strictNullChecks --strictFunctionTypes --strictBindCallApply --strictPropertyInitialization --noImplicitThis --useUnknownInCatchVariables --alwaysStrict --noUnusedLocals --noUnusedParameters --noImplicitReturns --noFallthroughCasesInSwitch --skipDefaultLibCheck --skipLibCheck
build tests/dist/tsc.test.js.result.txt: node tests/dist/tsc.test.js
  args = --test
build tests/dist/node.test.js: tsc tests/src/node.test.ts | $builddir/.ninjutsu-build/npmlink/tests/package.json || $builddir/.ninjutsu-build/prettier/tests/src/node.test.ts
  pool = compiletests
  cwd = tests
  args = --target ES2018 --lib ES2021 --outDir dist --module NodeNext --moduleResolution NodeNext --esModuleInterop --forceConsistentCasingInFileNames --strict --noImplicitAny --strictNullChecks --strictFunctionTypes --strictBindCallApply --strictPropertyInitialization --noImplicitThis --useUnknownInCatchVariables --alwaysStrict --noUnusedLocals --noUnusedParameters --noImplicitReturns --noFallthroughCasesInSwitch --skipDefaultLibCheck --skipLibCheck
build tests/dist/node.test.js.result.txt: node tests/dist/node.test.js
  args = --test
build tests/dist/core.test.js: tsc tests/src/core.test.ts | $builddir/.ninjutsu-build/npmlink/tests/package.json || $builddir/.ninjutsu-build/prettier/tests/src/core.test.ts
  pool = compiletests
  cwd = tests
  args = --target ES2018 --lib ES2021 --outDir dist --module NodeNext --moduleResolution NodeNext --esModuleInterop --forceConsistentCasingInFileNames --strict --noImplicitAny --strictNullChecks --strictFunctionTypes --strictBindCallApply --strictPropertyInitialization --noImplicitThis --useUnknownInCatchVariables --alwaysStrict --noUnusedLocals --noUnusedParameters --noImplicitReturns --noFallthroughCasesInSwitch --skipDefaultLibCheck --skipLibCheck
build tests/dist/core.test.js.result.txt: node tests/dist/core.test.js
  args = --test
